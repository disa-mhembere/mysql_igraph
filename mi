#!/usr/bin/python

# mi.py
# Created by Disa Mhembere on 2013-08-06.
# Email: disa@jhu.edu
# Copyright (c) 2013. All rights reserved.

import argparse
import sys
import MySQLdb
import info_queries
from contextlib import closing
from getpass import getpass

def interactive_driver(**authargs):
  """
  Driver for interactive info mode
  """
  cmd = 0

  # TODO: Dynamic connection here!
  db = MySQLdb.connect(host=authargs["db_host"], user=authargs["db_user"], passwd=authargs["db_pass"], db=authargs["db_name"])
  db.autocommit(True)

  qry_dict = {1:info_queries.get_db_names, 2:info_queries.enter_db, 3:info_queries.get_table_names,
              4:info_queries.get_table_description, 5:info_queries.get_sample_rows, 6:info_queries.get_datadir,
              7:info_queries.create_db}

  with closing(db.cursor()) as cursor:
    cursor.connection.autocommit(True)

    while not (cmd == 8):
      print "\nWhat would you like to do?:\n"
      print "{0:50}".format("1. Show database names.") + "2. Enter database."
      print "{0:50}".format("3. Show table names.") + "4. Get table description (column names/types)."
      print "{0:50}".format("5. Get 2 sample rows from table.") + "6. Show data directory (Locate output)"
      print "{0:50}".format("7. Create new database") + "8. Quit application/Exit\n"

      try:
        cmd = sys.stdin.readline().strip()
        cmd = int(cmd)
      except:
        pass # Silent fail

      if not isinstance(cmd, int):
        sys.stderr.write("Invalid non-numerical command '{0}' ! Try again. \n".format(cmd))
      elif (cmd == 8):
        print "Exiting application ..."
        sys.exit(1)
      elif (cmd not in qry_dict.keys()):
        sys.stderr.write("Invalid command '{0}' ! Try again.\n".format(cmd))

      else:
        cursor.execute(qry_dict[cmd](db_name=authargs["db_name"]))
        print "\n======================================================\nQuery result:"
        for row in cursor.fetchall():
          print row
        print "======================================================"

def main():
  parser = argparse.ArgumentParser(description="Iteractive MySQL database/table explorer.")
  parser.add_argument("db_user", action="store", help="The name of the database user who will be reponsible for all transactions")
  parser.add_argument("--db_host", "-H", action="store", default="localhost", help="The database hostname/network address. Default is localhost.")
  parser.add_argument("--tb_name", "-t", action="store", help="The table name containing the graph.")
  parser.add_argument("--db_name", "-d", action="store", help="The database name containing the graph.")

  result = parser.parse_args()

  result.db_pass = getpass("Please enter the '%s' user password for MySQL:" % result.db_user)
  interactive_driver(db_pass=result.db_pass, db_host=result.db_host, db_name=result.db_name, db_user=result.db_user)

if __name__ == '__main__':
  main()